{"version":3,"sources":["webpack:///./src/pages/research.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Research","render","data","this","props","siteTitle","site","siteMetadata","title","headerLinks","menuLinks","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","n","Typography","baseFontSize","baseLineHeight","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","react_default","style","marginBottom","margin","maxWidth","padding","display","justifyItems","alignItems","flex","gatsby_browser_entry","to","textDecoration","map","link","key","listStyleType","Layout","_this$props","children","marginLeft","marginRight","header","Date","getFullYear"],"mappings":"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","file":"component---src-pages-research-js-0c5faf77f929edfed449.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass Research extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const headerLinks = data.site.siteMetadata.menuLinks\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} headerLinks={headerLinks}>\n        <SEO title=\"Research\" />\n        <article>\n          This is the research page\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default Research\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        menuLinks {\n          name\n          link\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: '18px',\n  baseLineHeight: 1.45,\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types'\n\nconst Header = ({ siteTitle, menuLinks }) => (\n  <header\n    style={{\n      marginBottom: \"1.45rem\",\n    }}\n  >\n    <div\n      style={{\n        marginBottom: \"1.45rem\",\n      }}\n    >\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: 960,\n          padding: \"1.45rem 1.0875rem\",\n          display: \"flex\",\n          justifyItems: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <h1 style={{ margin: 0, flex: 1 }}>\n          <Link\n            to=\"/\"\n            style={{\n              textDecoration: \"none\",\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <div>\n          <nav>\n            <ul style={{ display: \"flex\", flex: 1 }}>\n              {menuLinks.map(link => (\n                <li\n                  key={link.name}\n                  style={{\n                    listStyleType: `none`,\n                    padding: `1rem`,\n                  }}\n                >\n                  <Link to={link.link}>\n                    {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport Header from \"./header\"\n\nimport { rhythm } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { title, headerLinks, children } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          // padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Header siteTitle={title} menuLinks={headerLinks}></Header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}